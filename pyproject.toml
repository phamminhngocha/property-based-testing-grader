# pyproject.toml - Modern Python project configuration
# Chức năng: Cấu hình tập trung cho build system, tools, và metadata
# Tuân thủ PEP 518, 621, 660

[build-system]
# Build dependencies
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
# Project metadata
name = "python-auto-grader-pbt"
version = "1.0.0"
description = "Automated grading system for Python assignments using Property-Based Testing"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["grading", "education", "testing", "property-based", "hypothesis", "python"]
authors = [
    {name = "Pham Minh Ngoc Ha", email = "phammingngocha@hvtc.edu.vn"}
]
maintainers = [
    {name = "Pham Minh Ngoc Ha", email = "phammingngocha@hvtc.edu.vn"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Education",
    "Topic :: Education :: Testing",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]

# Dependencies
dependencies = [
    "hypothesis>=6.92.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-timeout>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.12.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "pylint>=3.0.0",
    "ipython>=8.18.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.5.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/[username]/python-auto-grader-pbt"
Documentation = "https://python-auto-grader-pbt.readthedocs.io"
Repository = "https://github.com/[username]/python-auto-grader-pbt.git"
Issues = "https://github.com/[username]/python-auto-grader-pbt/issues"

[project.scripts]
# Command line scripts
pbt-grader = "src.cli:main"

# ============================================================================
# Tool Configurations
# ============================================================================

[tool.black]
# Black code formatter configuration
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
# Import sorting configuration
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
# Type checking configuration
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true

[[tool.mypy.overrides]]
module = "hypothesis.*"
ignore_missing_imports = true

[tool.pylint.messages_control]
# Pylint configuration
disable = [
    "C0111",  # missing-docstring
    "C0103",  # invalid-name
    "R0913",  # too-many-arguments
    "R0914",  # too-many-locals
]

[tool.pylint.format]
max-line-length = 88

[tool.coverage.run]
# Coverage configuration
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*.py",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 85

[tool.pytest.ini_options]
# Pytest configuration (alternative to pytest.ini)
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
