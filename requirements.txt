# ============================================================================
# Property-Based Testing Automatic Grading System
# Python Dependencies Requirements File
# ============================================================================
# 
# This file lists all Python packages required to run the PBT grading system.
# Install all dependencies using: pip install -r requirements.txt
#
# Tested with Python 3.8+
# Last updated: October 2025
# ============================================================================

# Core Testing Framework
# ----------------------
# Hypothesis: Property-based testing framework for generating test cases
hypothesis>=6.92.0,<7.0.0

# pytest: Testing framework for running unit tests
pytest>=7.4.0,<8.0.0

# pytest-cov: Code coverage plugin for pytest
pytest-cov>=4.1.0,<5.0.0

# pytest-timeout: Timeout plugin to prevent infinite loops
pytest-timeout>=2.2.0,<3.0.0


# Code Analysis and Execution
# ----------------------------
# ast-tools: Enhanced Abstract Syntax Tree manipulation
ast-tools>=0.1.5

# importlib-metadata: Backport of importlib.metadata for older Python versions
importlib-metadata>=6.8.0

# tracemalloc: Memory profiling (built-in, listed for documentation)
# Standard library module - no installation needed


# Type Checking and Validation
# -----------------------------
# typing-extensions: Backport of typing features for older Python
typing-extensions>=4.8.0


# Data Structures and Utilities
# ------------------------------
# numpy: Numerical computing library for test data generation
numpy>=1.24.0,<2.0.0

# pandas: Data manipulation for analyzing test results (optional)
pandas>=2.0.0,<3.0.0


# Performance and Profiling
# --------------------------
# psutil: System and process utilities for resource monitoring
psutil>=5.9.0


# Reporting and Visualization
# ----------------------------
# tabulate: Pretty-print tabular data for test reports
tabulate>=0.9.0

# colorama: Cross-platform colored terminal output
colorama>=0.4.6

# rich: Rich text and beautiful formatting in terminal
rich>=13.7.0


# Security and Sandboxing
# ------------------------
# RestrictedPython: Restricted execution environment for student code
RestrictedPython>=7.0


# Development and Testing (Optional)
# -----------------------------------
# black: Code formatter (development only)
black>=23.12.0

# flake8: Linting tool (development only)
flake8>=7.0.0

# mypy: Static type checker (development only)
mypy>=1.8.0

# pylint: Code quality checker (development only)
pylint>=3.0.0


# Documentation (Optional)
# -------------------------
# sphinx: Documentation generator
sphinx>=7.2.0

# sphinx-rtd-theme: ReadTheDocs theme for Sphinx
sphinx-rtd-theme>=2.0.0


# ============================================================================
# Version Pinning Notes:
# ----------------------
# - Use ~= for compatible release (allows patch updates)
# - Use >= and < for version ranges (allows minor updates)
# - Use == for exact versions (only when necessary)
#
# Example version specifiers:
# package==1.2.3     # Exactly version 1.2.3
# package>=1.2.3     # Version 1.2.3 or higher
# package~=1.2.3     # Compatible release (>=1.2.3, <1.3.0)
# package>=1.2,<2.0  # Version range
#
# To update all packages to latest compatible versions:
# pip install --upgrade -r requirements.txt
#
# To freeze current environment to exact versions:
# pip freeze > requirements-lock.txt
# ============================================================================